<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>netcoreapp1.1</TargetFramework>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
  </PropertyGroup>

  <ItemGroup>
    <None Remove="src\app\components\notes\notes-detail.component.ts" />
    <None Remove="src\app\constant.service.ts" />
    <None Remove="src\app\models\BaseInfo.ts" />
    <None Remove="src\app\models\Note.ts" />
    <None Remove="src\app\pipe\safehtml-pipe.ts" />
    <None Remove="src\app\services\notes-service.ts" />
    <None Remove="src\app\services\types-service.ts" />
  </ItemGroup>

  <ItemGroup>
    <Content Include="src\app\components\app\app.component.css" />
    <Content Include="src\app\components\app\app.component.html" />
    <Content Include="src\app\components\footer\footer.component.html" />
    <Content Include="src\app\components\home\home.component.html" />
    <Content Include="src\app\components\login\login.component.css" />
    <Content Include="src\app\components\login\login.component.html" />
    <Content Include="src\app\components\navmenu\navmenu.component.css" />
    <Content Include="src\app\components\navmenu\navmenu.component.html" />
    <Content Include="src\app\components\notes\notes-update.component.css" />
    <Content Include="src\app\components\notes\notes-update.component.html" />
    <Content Include="src\app\components\notes\notes.component.css" />
    <Content Include="src\app\components\notes\notes.component.html" />
    <Content Include="src\app\components\notes\notes-create.component.css" />
    <Content Include="src\app\components\notes\notes-create.component.html" />
    <Content Include="src\app\components\register\register.component.css" />
    <Content Include="src\app\components\register\register.component.html" />
    <Content Include="src\app\components\vocabulary\vocabulary.component.css" />
    <Content Include="src\app\components\vocabulary\vocabulary.component.html" />
    <Content Include="src\assets\css\bootstrap.css" />
    <Content Include="src\assets\fonts\glyphicons-halflings-regular.eot" />
    <Content Include="src\assets\fonts\glyphicons-halflings-regular.svg" />
    <Content Include="src\assets\fonts\glyphicons-halflings-regular.ttf" />
    <Content Include="src\assets\fonts\glyphicons-halflings-regular.woff" />
    <Content Include="src\assets\fonts\glyphicons-halflings-regular.woff2" />
    <Content Include="src\assets\images\DoubleRing.gif" />
    <Content Include="src\assets\js\bootstrap.js" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="AfominDotCom.NgProjectTemplate.Server" Version="1.0.5" />
  </ItemGroup>

  <ItemGroup>
    <None Include=".gitignore" />
    <None Include="README.md" />
    <None Include="package.json" />
  </ItemGroup>

  <ItemGroup>
    <TypeScriptCompile Include="src\app\components\app\app.component.ts" />
    <TypeScriptCompile Include="src\app\components\footer\footer.component.ts" />
    <TypeScriptCompile Include="src\app\components\home\home.component.ts" />
    <TypeScriptCompile Include="src\app\components\login\login.component.ts" />
    <TypeScriptCompile Include="src\app\components\navmenu\navmenu.component.ts" />
    <TypeScriptCompile Include="src\app\components\notes\notes-update.component.ts" />
    <TypeScriptCompile Include="src\app\components\notes\notes-detail.component.ts" />
    <TypeScriptCompile Include="src\app\components\notes\notes.component.ts" />
    <TypeScriptCompile Include="src\app\components\notes\notes-create.component.ts" />
    <TypeScriptCompile Include="src\app\components\register\control-messages.component.ts" />
    <TypeScriptCompile Include="src\app\components\register\register.component.ts" />
    <TypeScriptCompile Include="src\app\components\vocabulary\vocabulary.component.ts" />
    <TypeScriptCompile Include="src\app\models\BaseInfo.ts" />
    <TypeScriptCompile Include="src\app\models\ArticleType.ts" />
    <TypeScriptCompile Include="src\app\models\Note.ts" />
    <TypeScriptCompile Include="src\app\pipe\safehtml-pipe.ts" />
    <TypeScriptCompile Include="src\app\services\authentication.service.ts" />
    <TypeScriptCompile Include="src\app\services\notes-service.ts" />
    <TypeScriptCompile Include="src\app\services\shared-service.ts" />
    <TypeScriptCompile Include="src\app\services\types-service.ts" />
    <TypeScriptCompile Include="src\app\services\validation.service.ts" />
    <TypeScriptCompile Include="src\app\services\vocabulary.service.ts" />
  </ItemGroup>

  <PropertyGroup>
    <NgProjectAssetsFile Condition="'$(ProjectAssetsFile)' != ''">$(ProjectAssetsFile)</NgProjectAssetsFile>
    <NgProjectAssetsFile Condition="'$(NgProjectAssetsFile)' == ''">$(BaseIntermediateOutputPath)/project.assets.json</NgProjectAssetsFile>
    <!-- Ensure $(NgProjectAssetsFile) is a full path -->
    <NgProjectAssetsFile Condition="'$([System.IO.Path]::IsPathRooted($(NgProjectAssetsFile)))' != 'true'">
      $([System.IO.Path]::GetFullPath($([System.IO.Path]::Combine('$(MSBuildProjectDirectory)', '$(NgProjectAssetsFile)'))))
    </NgProjectAssetsFile>
  </PropertyGroup>

  <Target Name="EnsureNugetPackagesInstalled" BeforeTargets="BeforeBuild" Condition="!Exists('$(NgProjectAssetsFile)')">
    <Message Text="File $(NgProjectAssetsFile) was not found." Importance="high" />
    <Message Text="------ Running a NuGet package restore ------" Importance="high" />
    <Exec Command="dotnet restore" />
    <Error Text="NuGet packages were restored. Run Build again." />
  </Target>

  <Target Name="NgBuildAndAddToPublishOutput" AfterTargets="ComputeFilesToPublish">
    <Message Text=" " Importance="high" />
    <Exec Command="npm run | findstr &quot;build:$(Configuration)&quot;" ConsoleToMSBuild="true" IgnoreExitCode="true" EchoOff="true" WorkingDirectory="$(MSBuildProjectDirectory)">
      <Output TaskParameter="ConsoleOutput" PropertyName="NpmScriptName" />
    </Exec>
    <Exec Condition=" '$(NpmScriptName)'=='build:$(Configuration)' " Command="npm run $(NpmScriptName)" />
    <Exec Condition=" '$(NpmScriptName)'!='build:$(Configuration)' " Command="npm run build" />
    
    <ItemGroup>
      <DistFiles Include="dist\**" />
      <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>%(DistFiles.Identity)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>

  <Target Name="CopyOnlyDist" AfterTargets="_CopyManagedProjectFilesToPublishIntermediateOutputPath;_CopyAspNetCoreFilesToIntermediateOutputPath">
    <PropertyGroup>
      <PublishIntermediateOutputPath>$(PublishIntermediateOutputPath)dist\</PublishIntermediateOutputPath>
      <IsTransformWebConfigDisabled>True</IsTransformWebConfigDisabled>
    </PropertyGroup>
  </Target>
  
</Project>
